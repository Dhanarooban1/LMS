// -------------------------------------
// 1. Prisma Generator & Datasource
// -------------------------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
 url      = env("DATABASE_URL")
 directUrl = env("DIRECT_URL")
}

// -------------------------------------
// 2. Models (Mirroring Your ERD)
// -------------------------------------

model Admin {
  admin_id   String @id
  admin_name String
  admin_email String
  password   String
}

model Member {
  mem_id    String @id
  mem_name  String
  mem_phone String?
  mem_email String?

  memberships Membership[]
  issuances   Issuance[]
}

model Membership {
  membership_id String @id
  member_id     String
  status        String

  // Relation: membership -> member
  member Member @relation(fields: [member_id], references: [mem_id])
}

model Issuance {
  issuance_id       String  @id
  book_id           String
  issuance_date     DateTime
  issuance_member   String
  issued_by         String?
  target_return_date DateTime?
  issuance_status   String?

  // Relations: issuance -> book, issuance -> member
  book   Book   @relation(fields: [book_id], references: [book_id])
  member Member @relation(fields: [issuance_member], references: [mem_id])
}

model Book {
  book_id            String @id
  book_name          String
  book_cat_id        String?
  book_collection_id String?
  book_launch_date   DateTime?
  book_publisher     String?

  // Relations: book -> category, book -> collection
  category   Category?   @relation(fields: [book_cat_id], references: [cat_id])
  collection Collection? @relation(fields: [book_collection_id], references: [collection_id])

  issuances  Issuance[]
}

model Collection {
  collection_id   String @id
  collection_name String

  // Relation: collection -> books
  books Book[]
}

model Category {
  cat_id      String @id
  cat_name    String
  sub_cat_name String?

  // Relation: category -> books
  books Book[]
}
